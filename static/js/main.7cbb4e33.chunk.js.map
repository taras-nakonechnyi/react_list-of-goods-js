{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortMode","App","useState","actualSortMode","setActualSortMode","listReverse","setListReverse","goodsToRender","goods","mode","reverse","goodsToSort","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","currrent","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACY,iBADZA,EAEI,SAFJA,EAGG,QA0BF,IAAMC,EAAM,WACjB,MAA4CC,mBAASF,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EA1BR,SAA0BC,EAAOC,EAAMC,GACrC,IAAMC,EAAW,YAAOH,GAmBxB,OAjBAG,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQL,GACN,KAAKT,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAOH,MAITH,GACFC,EAAYD,UAGPC,EAMeM,CACpBlB,EACAI,EACAE,GAQF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,aAAcjB,IAAmBH,KAEnCqB,QAAS,kBAAMjB,EAAkBJ,IALnC,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,aAAcjB,IAAmBH,KAEnCqB,QAAS,kBAAMjB,EAAkBJ,IALnC,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAe,SAAAgB,GAAQ,OAAKA,MAL7C,wBAUInB,IAAmBH,IAAmBK,IACxC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA1CQ,WAChBjB,EAAkBJ,GAClBM,GAAe,IAqCT,sBAUJ,6BACGC,EAAcgB,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cbb4e33.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortMode = {\n  alphabetically: 'alphabetically',\n  length: 'length',\n  reset: 'reset',\n};\n\nfunction getPreparedGoods(goods, mode, reverse) {\n  const goodsToSort = [...goods];\n\n  goodsToSort.sort((good1, good2) => {\n    switch (mode) {\n      case sortMode.alphabetically:\n        return good1.localeCompare(good2);\n\n      case sortMode.length:\n        return good1.length - good2.length;\n\n      default:\n        return good1;\n    }\n  });\n\n  if (reverse) {\n    goodsToSort.reverse();\n  }\n\n  return goodsToSort;\n}\n\nexport const App = () => {\n  const [actualSortMode, setActualSortMode] = useState(sortMode.reset);\n  const [listReverse, setListReverse] = useState(false);\n  const goodsToRender = getPreparedGoods(\n    goodsFromServer,\n    actualSortMode,\n    listReverse,\n  );\n\n  const setRevers = () => {\n    setActualSortMode(sortMode.reset);\n    setListReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !(actualSortMode === sortMode.alphabetically),\n          })}\n          onClick={() => setActualSortMode(sortMode.alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': !(actualSortMode === sortMode.length),\n          })}\n          onClick={() => setActualSortMode(sortMode.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !listReverse,\n          })}\n          onClick={() => setListReverse(currrent => !currrent)}\n        >\n          Reverse\n        </button>\n\n        {(!(actualSortMode === sortMode.reset) || listReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setRevers}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsToRender.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}