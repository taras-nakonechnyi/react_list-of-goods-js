{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","MODE_ALPHABETICALLY","MODE_LENGTH","MODE_RESET","App","goods","mode","reverse","useState","sortMode","setSortMode","listReverse","setListReverse","goodsToRender","sort","good1","good2","localeCompare","length","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,iBACtBC,EAAc,SACdC,EAAa,QA0BZ,IAAMC,EAAM,WACjB,IAzBwBC,EAAOC,EAAMC,EAyBrC,EAAgCC,mBAASL,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,GA3BkBR,EA2Be,GAAD,OAChCL,GA5ByBM,EA6B7BG,EA7BmCF,EA8BnCI,EA7BFN,EAAMS,MAAK,SAACC,EAAOC,GACjB,OAAQV,GACN,KAAKL,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,KAAKf,EACH,OAAOY,EAET,QACE,OAAO,MAITR,GACFF,EAAME,UAGDF,GAYP,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,aAAcZ,IAAaR,KAE7BqB,QAAS,kBAAMZ,EAAYT,IAL7B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,aAAcZ,IAAaP,KAE7BoB,QAAS,kBAAMZ,EAAYR,IAL7B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaV,IAEfW,QAAS,kBAAMV,GAAgBD,IALjC,wBAUIF,IAAaN,IAAeQ,IAC9B,wBACES,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPZ,EAAYP,GACZS,GAAe,IALnB,sBAaJ,6BACGC,EAAcU,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ee87fa3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst MODE_ALPHABETICALLY = 'alphabetically';\nconst MODE_LENGTH = 'length';\nconst MODE_RESET = 'reset';\n\nfunction getPreparedGoods(goods, mode, reverse) {\n  goods.sort((good1, good2) => {\n    switch (mode) {\n      case MODE_ALPHABETICALLY:\n        return good1.localeCompare(good2);\n\n      case MODE_LENGTH:\n        return good1.length - good2.length;\n\n      case MODE_RESET:\n        return good1;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    goods.reverse();\n  }\n\n  return goods;\n}\n\nexport const App = () => {\n  const [sortMode, setSortMode] = useState(MODE_RESET);\n  const [listReverse, setListReverse] = useState(false);\n  const goodsToRender = getPreparedGoods(\n    [...goodsFromServer],\n    sortMode,\n    listReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !(sortMode === MODE_ALPHABETICALLY),\n          })}\n          onClick={() => setSortMode(MODE_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': !(sortMode === MODE_LENGTH),\n          })}\n          onClick={() => setSortMode(MODE_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !listReverse,\n          })}\n          onClick={() => setListReverse(!listReverse)}\n        >\n          Reverse\n        </button>\n\n        {(!(sortMode === MODE_RESET) || listReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortMode(MODE_RESET);\n              setListReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsToRender.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}